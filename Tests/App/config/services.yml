services:
  connector.error.triggerer:
    class: Smartbox\Integration\ServiceBusBundle\Tests\App\Connectors\ErrorTriggerConnector

  connector.helper:
    class: Smartbox\Integration\ServiceBusBundle\Tests\App\Connectors\HelperConnector

  connector.spy:
    class: Smartbox\Integration\ServiceBusBundle\Tests\App\Connectors\SpyConnector

  handler.sync:
      class: Smartbox\Integration\FrameworkBundle\Handlers\MessageHandler
      calls:
        - [setEventDispatcher, [@event_dispatcher]]
        - [setRetriesMax, [5]]
        - [setConnectorsRouter, [@smartesb.router.connectors]]
        - [setItinerariesRouter, [@smartesb.router.itineraries]]
        - [setId, ['handler.sync']]
        - [setFailedURI, ['queue://smartesb/sync/failed']]
        - [setRetryURI, ['stomp://smartesb/sync/retry']]
        - [setThrowExceptions, [true]]
      tags:
        - { name: kernel.event_listener, event: smartesb.exchange.new, method: onNewExchangeEvent }

  handler.async:
      class: Smartbox\Integration\FrameworkBundle\Handlers\MessageHandler
      calls:
        - [setEventDispatcher, [@event_dispatcher]]
        - [setRetriesMax, [5]]
        - [setConnectorsRouter, [@smartesb.router.connectors]]
        - [setItinerariesRouter, [@smartesb.router.itineraries]]
        - [setId, ['handler.async']]
        - [setFailedURI, ['queue://smartesb/async/failed']]
        - [setDeferNewExchanges, [true]]
      tags:
        - { name: kernel.event_listener, event: smartesb.exchange.new, method: onNewExchangeEvent }

  # DEFAULT QUEUE DRIVER
  driver.queue:
      class: Smartbox\Integration\FrameworkBundle\Drivers\Queue\ActiveMQStompQueueDriver
      calls:
        - [configure, ['localhost', '', '']]
        - [setSerializer, [@serializer]]

  # DEFAULT QUEUE CONSUMER
  consumers.queue:
      class: Smartbox\Integration\FrameworkBundle\Consumers\QueueConsumer
      calls:
          - [ setQueueDriver, [ @driver.queue ] ]
          - [ setHandler, [ @handler.async ] ]
